## QIIME2 analysis pipeline ##
## Paper title:  ##
## Bovern Suchart Arromrak (bovernsuchart04@gmail.com) ##

1. Activate the QIIME2 in the terminal 

conda activate qiime2-2022.2

2. Data Import and demultiplexing (Note: manifest file describe where your data are located for each sample): 

Note: My data from Ramaciotti Centre for Genomics is in Casava 1.8. format:  Paired-end demultiplexed fastq format

qiime tools import \
--type "SampleData[PairedEndSequencesWithQuality]" \
--input-path manifest-forward-reverse.txt \
--input-format PairedEndFastqManifestPhred33V2 \
--output-path demux.paired-end.qza
	
3. Check if the metadata is good to use 

qiime metadata tabulate \
--m-input-file metadata_daynight.txt \
--o-visualization tabulated-sample-metadata.qzv

4. Sequence checking (e.g., quality, sequencing depth etc.)

qiime demux summarize \
--i-data demux.paired-end.qza \
--o-visualization demux.paired-end.qzv

* Visualize the forward and reverse sequences.

qiime tools view demux.paired-end.qzv

5. Sequence quality control and processing (the trimming choice based on the data visualise in demux.paired-end.qzv)

qiime dada2 denoise-paired \
--i-demultiplexed-seqs demux.paired-end.qza \
--p-trim-left-f 25 \
--p-trim-left-r 25 \
--p-trunc-len-f 270 \
--p-trunc-len-r 220 \
--p-max-ee-f 2 \
--p-max-ee-r 4 \
--p-n-threads 0 \
--o-table dada2_table.qza \
--o-representative-sequences dada2_rep_set.qza	\
--o-denoising-stats dada2_stats.qza \
--verbose

* Tabulate and view the denoised statistics: 

qiime metadata tabulate \
--m-input-file dada2_stats.qza \
--o-visualization dada2_stats.qzv 

qiime tools view dada2_stats.qzv

* Tabulate our representative sequence (This is not related to the count-table, but only with the representative sequences). 

qiime feature-table tabulate-seqs \
--i-data dada2_rep_set.qza \
--o-visualization dada2_rep_set.qzv

* Check the count of each of the representative sequences:

qiime feature-table summarize \
--i-table dada2_table.qza \
--o-visualization dada2_table.qzv \
--m-sample-metadata-file metadata_daynight.txt

6. Excluding sequences by alignment (using greengenes database)

a. Download the greengene reference database from here: https://docs.qiime2.org/2021.8/data-resources/

* File name: gg_13_8_otus.tar (3.4 GB) 
* Unzip it, you will find there are many files. Choose the representative file entitled: 99_otus.fasta.
* The reason for choosing this is because it is the largest database and with the greatest resolution. More reasons are described here: https://forum.qiime2.org/t/feature-classifier-and-training-percent-alignment/5598/3

b. Import into artifacts. 

qiime tools import \
--type 'FeatureData[Sequence]' \
--input-path 99_otus.fasta \
--output-path 99_greengenes_rep.qza

c. Separating query sequences into those that hit/misses to the sequences present in the reference database. Note: Run quite long. 

qiime quality-control exclude-seqs \
--i-query-sequences dada2_rep_set.qza \
--i-reference-sequences 99_greengenes_rep.qza \
--p-method vsearch \
--p-perc-identity 0.65 \
--p-perc-query-aligned 0.5 \
--p-threads 20 \
--o-sequence-hits hits-gg.qza \
--o-sequence-misses misses-gg.qza \
--verbose
      
d. See Òthose hitsÓ sequences in QIIME2 View
qiime feature-table tabulate-seqs \
--i-data hits-gg.qza \
--o-visualization hits-gg.qzv

e. See Òthose missesÓ sequences in QIIME2 View

qiime feature-table tabulate-seqs \
--i-data misses-gg.qza \
--o-visualization misses-gg.qzv

f. Remove those ÒmissedÓ sequences in the representative file

qiime feature-table filter-seqs \
--i-data dada2_rep_set.qza \
--m-metadata-file misses-gg.qza \
--p-exclude-ids \
--o-filtered-data dada2_rep_set_gg.qza \
--verbose

* Tabulate our representative.

qiime feature-table tabulate-seqs \
--i-data dada2_rep_set_gg.qza \
--o-visualization dada2_rep_set_gg.qzv

g. Remove those ÒmissesÓ sequences in the count table
qiime feature-table filter-features \
--i-table dada2_table.qza \
--m-metadata-file misses-gg.qza \
--p-exclude-ids \
--o-filtered-table dada2_table_gg.qza \
--verbose

h. Check the table for count of each of the ÒmissesÓ-removed representative sequence:

qiime feature-table summarize \
--i-table dada2_table_gg.qza \
--o-visualization dada2_table_gg.qzv \
--m-sample-metadata-file metadata_daynight.txt


7. Non-target sequences filtering step (This step is important for the removal all the other non-target sequences)

a. Remove singletons from the dataset 

qiime feature-table filter-features \
--i-table dada2_table_gg.qza \
--p-min-frequency 2 \
--o-filtered-table dada2_table_gg_singlefiltered.qza

* Summarize and check the count of the representative sequences:

qiime feature-table summarize \
--i-table dada2_table_gg_singlefiltered.qza \
--o-visualization dada2_table_gg_singlefiltered.qzv \
--m-sample-metadata-file metadata_daynight.txt

* (Important 2-steps process for representative sequence file). Remove the singleton from the representative sequence datasets as well. This is important, so that the feature in the Òcount tableÓ and Òrepresentative sequenceÓ files have the same number of features.	

i.  (1st Step) Get the list of feature ID that donÕt match. I do this by a cross-checking method (--p-exclude-ids will remove anything that is present in the dada2_table_gg.qza file): 

qiime feature-table filter-seqs \
--i-data dada2_rep_set_gg.qza \
--i-table dada2_table_gg_singlefiltered.qza \
--p-exclude-ids \
--o-filtered-data singletons.qza \
--verbose

ii. See ÒsingletonsÓ sequences in QIIME2 view

   qiime feature-table tabulate-seqs \
   --i-data singletons.qza \
   --o-visualization singletons.qzv

iii. (2nd Step) Remove the singletons from the representative sequence file. 

qiime feature-table filter-seqs \
--i-data dada2_rep_set_gg.qza \
--m-metadata-file singletons.qza \
--p-exclude-ids \
--o-filtered-data dada2_rep_set_gg_singlefiltered.qza \
--verbose


iv. Check if the sequence counts same as in the singleton-filtered file: 

qiime feature-table tabulate-seqs \
--i-data dada2_rep_set_gg_singlefiltered.qza \
--o-visualization dada2_rep_set_gg_singlefiltered.qzv


b. Remove sequences shorter than a certain length the dataset (Keep sequences >349bp). 

qiime feature-table filter-seqs \
--i-data dada2_rep_set_gg_singlefiltered.qza \
--m-metadata-file dada2_rep_set_gg_singlefiltered.qza \
--p-where 'length(sequence) > 349' \
--o-filtered-data dada2_rep_set_gg_singlefiltered_350.qza \
 --verbose 

* Tabulate our representative sequences. 

qiime feature-table tabulate-seqs \
--i-data dada2_rep_set_gg_singlefiltered_350.qza \
--o-visualization dada2_rep_set_gg_singlefiltered_350.qzv


* (Important 2-steps process for count table file ). Remove the sequences <350 from the count table file as well. 
i. (1st Step) Get the list of feature ID is less than 350bp.  

qiime feature-table filter-seqs \
--i-data dada2_rep_set_gg_singlefiltered.qza \
--m-metadata-file dada2_rep_set_gg_singlefiltered.qza \
--p-where 'length(sequence) < 350' \
--o-filtered-data less350.qza \
--verbose 

ii. See Ò<350 sequencesÓ count table file in QIIME2 view

qiime feature-table tabulate-seqs \
--i-data less350.qza \
--o-visualization less350.qzv

iii. (2nd Step) Remove the Ò<350 sequencesÓ from the count table file. 

qiime feature-table filter-features \
--i-table dada2_table_gg_singlefiltered.qza \
--m-metadata-file less350.qza \
--p-exclude-ids \
--o-filtered-table dada2_table_gg_singlefiltered_350.qza \
--verbose

iv. Check if the sequence counts in the count table the same as in the  representative sequence file.

qiime feature-table summarize \
--i-table dada2_table_gg_singlefiltered_350.qza \
--o-visualization dada2_table_gg_singlefiltered_350.qzv \
      --m-sample-metadata-file metadata_daynight.txt

8. Taxonomic classification for quality-filtered sequences

* Make a classifier trained for V3-V4 16S region using SILVA database (with the python RESCRIPt package)
* Procedure for classifier training using RESCRIPt package: https://github.com/bokulich-lab/RESCRIPt	
	
a. Download the python package through qiime2 environment:

conda activate qiime2-2022.2
conda install -c conda-forge -c bioconda -c qiime2 -c defaults xmltodict

b. Install the source:
pip install git+https://github.com/bokulich-lab/RESCRIPt.git

* Procedure to training to make a clasiffier (https://forum.qiime2.org/t/processing-filtering-and-evaluating-the-silva-database-and-other-reference-sequence-data-with-rescript/15494#heading--TOC):	

a. Download SILVA files, Import and formatting (Will take some time to run):

qiime rescript get-silva-data \
--p-version '138' \
--p-target 'SSURef_NR99' \
--p-include-species-labels \
--p-no-rank-propagation \	
--p-ranks domain kingdom phylum class order family genus \ #you may decide what levels do you want
--o-silva-sequences silva-138-ssu-nr99-seqs.qza \
--o-silva-taxonomy silva-138-ssu-nr99-tax.qza

* To check if the taxonomic names and classification is according to your desired intention. 

qiime metadata tabulate \
--m-input-file silva-138-ssu-nr99-tax.qza \
--o-visualization silva-138-ssu-nr99-tax.qzv

b. ÒCullingÓ low-quality sequences with cull-seqs (runs quite long)

qiime rescript cull-seqs \
--i-sequences silva-138-ssu-nr99-seqs.qza \
--p-n-jobs 20 \
--o-clean-sequences silva-138-ssu-nr99-seqs-cleaned.qza

a. Filtering sequences by length and taxonomy (very fast)

qiime rescript filter-seqs-length-by-taxon \
--i-sequences silva-138-ssu-nr99-seqs-cleaned.qza \
--i-taxonomy silva-138-ssu-nr99-tax.qza \
--p-labels Archaea Bacteria Eukaryota \
--p-min-lens 900 1200 1400 \
--o-filtered-seqs silva-138-ssu-nr99-seqs-filt.qza \
--o-discarded-seqs silva-138-ssu-nr99-seqs-discard.qza

b. Dereplication of sequences and taxonomy (in Uniq mode): 

qiime rescript dereplicate \
--i-sequences silva-138-ssu-nr99-seqs-filt.qza  \
--i-taxa silva-138-ssu-nr99-tax.qza \
--p-rank-handles 'silva' \
--p-mode 'uniq' \
--o-dereplicated-sequences silva-138-ssu-nr99-seqs-derep-uniq.qza \
--o-dereplicated-taxa silva-138-ssu-nr99-tax-derep-uniq.qza

c. (16S FULL-LENGTH) Make our classifier for use on full-length SSU sequences 

qiime feature-classifier fit-classifier-naive-bayes \
--i-reference-reads  silva-138-ssu-nr99-seqs-derep-uniq.qza \
--i-reference-taxonomy silva-138-ssu-nr99-tax-derep-uniq.qza \
--o-classifier silva-138-ssu-nr99-full-length-classifier.qza

      
d. (16S V3-V4 REGION) Make our classifier for use on V3-V4 region of SSU sequences (inclusive of archaea and eukaryotes). 

i. Extract the sequences first from the previously dereplicated sequences (See the description in the website):

qiime feature-classifier extract-reads \
--i-sequences silva-138-ssu-nr99-seqs-derep-uniq.qza \
--p-f-primer CCTACGGGNGGCWGCAG \
--p-r-primer GACTACHVGGGTATCTAATCC \
--p-n-jobs 20 \
--p-read-orientation 'forward' \
--o-reads silva-138-ssu-nr99-seqs-341f-805r.qza

ii. Dereplicate extracted region (again):

qiime rescript dereplicate \
--i-sequences silva-138-ssu-nr99-seqs-341f-805r.qza \
--i-taxa silva-138-ssu-nr99-tax-derep-uniq.qza \
--p-rank-handles 'silva' \
--p-mode 'uniq' \
--o-dereplicated-sequences silva-138-ssu-nr99-seqs-341f-805r-uniq.qza \
--o-dereplicated-taxa  silva-138-ssu-nr99-tax-341f-805r-derep-uniq.qza

iii. Amplicon-specific classifier training 

qiime feature-classifier fit-classifier-naive-bayes \
--i-reference-reads silva-138-ssu-nr99-seqs-341f-805r-uniq.qza \
--i-reference-taxonomy silva-138-ssu-nr99-tax-341f-805r-derep-uniq.qza \
--o-classifier silva-138-ssu-nr99-341f-805r-classifier.qza  #ready to use
      
* Classify our sequences with our 16S V3-V4 trained classifier. Command code (always start a new terminal to do this): 
qiime feature-classifier classify-sklearn \
--i-reads dada2_rep_set_gg_singlefiltered_350.qza \
--i-classifier silva-138-ssu-nr99-341f-805r-classifier.qza \
--p-n-jobs 10 \    
--o-classification taxonomy_silva.qza

* View the taxonomy of our sequences. Command code: 
qiime metadata tabulate \
--m-input-file taxonomy_silva.qza \
--o-visualization taxonomy_silva.qzv

* Visualized the taxonomic barchart:

qiime taxa barplot \
--i-table dada2_table_gg_singlefiltered_350.qza \
--i-taxonomy taxonomy_silva.qza \
--m-metadata-file  metadata_daynight.txt \
--o-visualization taxa_prefiltering_barplot_silva.qzv

* Removal of Chloroplast, Mitochondria, Eukaryotic sequences:

qiime taxa filter-table \
--i-table dada2_table_gg_singlefiltered_350.qza \
--i-taxonomy taxonomy_silva.qza \
--p-exclude mitochondria,chloroplast,archaea,eukaryota \
--o-filtered-table dada2_table_gg_singlefiltered_350-taxremoved.qza

* Check the number of feature count in the Ònon-target-removedÓ filtered table (Simply as a reference). 

qiime feature-table summarize \
--i-table dada2_table_gg_singlefiltered_350-taxremoved.qza \
--o-visualization dada2_table_gg_singlefiltered_350-taxremoved.qzv \
--m-sample-metadata-file metadata_daynight.txt

* Visualize with barchart again (post-filtering step).

qiime taxa barplot \
--i-table dada2_table_gg_singlefiltered_350-taxremoved.qza \
--i-taxonomy taxonomy_silva.qza \
--m-metadata-file  metadata_daynight_noD2.txt \
--o-visualization taxa_postfiltering_barplot_gg.qzv


* Before finishing, it is best if we make the number of features the same for representative sequence and count table file. Again, it is the important 2-steps process we did previously. Command code: 

i. (1st Step) Get the list of feature ID that donÕt match. I do this by a cross-checking method (--p-exclude-ids will remove anything that is present in the dada2_table_gg_singlefiltered_350-taxremoved.qza file). 

qiime feature-table filter-seqs \
--i-data dada2_rep_set_gg_singlefiltered_350.qza \
--i-table dada2_table_gg_singlefiltered_350-taxremoved.qza \
--p-exclude-ids \
--o-filtered-data taxremoved.qza \
--verbose

ii. See ÒtaxremovedÓ sequences in QIIME2 view

qiime feature-table tabulate-seqs \
--i-data taxremoved.qza \
--o-visualization taxremoved.qzv

iii. (2nd Step) Remove the singletons from the representative sequence file. 

qiime feature-table filter-seqs \
--i-data dada2_rep_set_gg_singlefiltered_350.qza \
--m-metadata-file taxremoved.qza \
--p-exclude-ids \
--o-filtered-data dada2_rep_set_gg_singlefiltered_350-taxremoved.qza \
--verbose


iv. Check if the sequence counts same as in the tax-removed count table file (i.e., dada2_table_gg_singlefiltered_350-taxremoved.qza). Command code: 

qiime feature-table tabulate-seqs \
--i-data dada2_rep_set_gg_singlefiltered_350-taxremoved.qza \
--o-visualization dada2_rep_set_gg_singlefiltered_350-taxremoved.qzv

9. Selecting a Rarefaction Depth	
	
* Get rarefaction curve first and visualize the data for a cut-off value

qiime diversity alpha-rarefaction \
--i-table dada2_table_gg_singlefiltered_350-taxremoved.qza \
--p-metrics observed_features \
--p-metrics chao1 \
--p-metrics shannon \
--p-metrics simpson \
--m-metadata-file metadata_daynight_noD2.txt \
--o-visualization alpha_rarefaction_curves.qzv \
--p-min-depth 10 \
--p-max-depth 100000 \
--p-steps 50


a. Sampling depth cut-off (Best Choice)): 21282 (ARM3) Ð remove two samples.

10. Getting the rarefied data
* Command code: 

a. Sampling depth at 21282
qiime diversity core-metrics-phylogenetic \
--i-table dada2_table_gg_singlefiltered_350-taxremoved.qza \
--i-phylogeny rooted-tree-fasttree.qza \
--p-sampling-depth 21282 \
--p-n-jobs-or-threads auto \
--m-metadata-file metadata_daynight.txt \
--output-dir core-metrics-results-21282 

11. Export and convert the relevant file (i.e., count table and taxonomy file) for R analysis

a. FeatureTable[Frequency] file (raw data):
qiime tools export \
--input-path dada2_table_gg_singlefiltered_350-taxremoved.qza \
--output-path raw_feature_table #This is a folder

biom convert \
--input-fp raw_feature_table.biom \  #I changed the name of the original file
--output-fp raw_feature_table \
--to-tsv 		

* Ò.tsvÓ file is still problematic when upload into R. So, convert it to excel format and save in Ò.txtÓ format. (Remember to remove the 1st row comment: Ò# Constructed from biom fileÓ; also makes sure the hastag # is removed from OTU ID as well)


b. FeatureTable[Frequency] file (rarefied data at 21282 sampling depth):

qiime tools export \
--input-path core-metrics-results-21282/rarefied_table.qza \
--output-path rarefied_feature_table-21282

biom convert \
--input-fp rarefied_feature_table-21282.biom \ #I changed the name of the original file 
--output-fp rarefied_feature_table-21282 \
--to-tsv 		*Output as TSV-formatted (classic) table.


c. Taxonomy file. Command code: 

qiime tools export \
--input-path taxonomy_silva.qza \
--output-path taxonomy_silva

## Core microbiome processing completed ##############################


## Another section #########################################################
      
12. Create a mean-celling microbiome data for mantel test

* Super important note: use raw count table (non-rarefied data)

* Remove BRM3 and DRM3 sample from the datasets: 

qiime feature-table filter-samples \
--i-table dada2_table_gg_singlefiltered_350-taxremoved.qza \
--m-metadata-file metadata_daynight.txt \
--p-where 'NOT [sample-name] IN  ("BRM3", "DRM3")' \
--o-filtered-table dada2_table_gg_10filtered_350-taxremoved_samplefiltered.qza

* See if the sample have been removed:

qiime feature-table summarize \
--i-table dada2_table_gg_10filtered_350-taxremoved_samplefiltered.qza \
--o-visualization dada2_table_gg_10filtered_350-taxremoved_samplefiltered.qzv

* Group the data by daytime with mean-ceiling parameter:

qiime feature-table group \
--i-table dada2_table_gg_10filtered_350-taxremoved_samplefiltered.qza \
--p-axis sample \
--m-metadata-file metadata_daynight_v2_removedBRM3DRM3.txt \
--m-metadata-column day-time \
--p-mode mean-ceiling \
--o-grouped-table table_daytime_raw.qza

* To view what is in the file: 
qiime feature-table summarize \
--i-table table_daytime_raw.qza \
--o-visualization table_daytime_raw.qzv 

13. Rarefy the mean-celling microbiome data 

a. Sampling depth at 53527 (T_1740)

qiime feature-table rarefy \
--i-table table_daytime_raw.qza \
--p-sampling-depth 53527 \
--p-no-with-replacement \
--o-rarefied-table table_daytime_samplegroup_rarefied53527.qza

* Convert the file into .tsv file for downstream analysis in R. 

* Artifact File: 

a. FeatureTable[Frequency]. 
qiime tools export \
--input-path table_daytime_samplegroup_rarefied53527.qza \
--output-path table_samplegroup *This is a folder

* Then, you need to convert it into a Ò.tsvÓ format (or .txt):

biom convert \
--input-fp table_samplegroup/feature-table.biom \
--output-fp table_samplegroup/table_daytime_samplegroup_rarefied53527 \
--to-tsv 		*Output as TSV-formatted (classic) table.


14. PICRUSt2 data pipeline - for functional microbiome analysis

i. The the following datasets were used: 

a. FeatureData[Sequence]		: dada2_rep_set_gg_singlefiltered_350-taxremoved.qza
b. FeatureTable[Frequency]	: dada2_table_gg_singlefiltered_350-taxremoved.qza
c. Metadata			: metadata_daynight.txt


*Start of the pipeline
      
i. Install the QIIME2 PICRUST2 plugin (use the source code method): https://github.com/picrust/picrust2/wiki/Installation
a. Install from source
b. Download the source tarball, untar, and move into directory. You can check that you are downloading the latest release here:Êhttps://github.com/picrust/picrust2/releases

wget https://github.com/picrust/picrust2/archive/v2.5.0.tar.gz
tar xvzf  v2.5.0.tar.gz
cd picrust2-2.5.0/

c. Create and activate the environment (with requirements) and then install PICRUSt2 with pip.

conda env create -f picrust2-env.yaml
conda activate picrust2
pip install --editable .


ii. The command code for the PICRUST2 starts here: 

qiime picrust2 full-pipeline \
--i-table dada2_table_gg_singlefiltered_350-taxremoved.qza \
--i-seq dada2_rep_set_gg_singlefiltered_350-taxremoved.qza \
--output-dir q2-picrust2_output \
--p-placement-tool epa-ng \
--p-threads 10 \
--p-hsp-method mp \
--p-max-nsti 0 \
--verbose

iii. Visualise the output files top understand the count data and also the barplot. 

Command code:

qiime feature-table summarize \
--i-table q2-picrust2_output/ec_metagenome.qza \
--o-visualization q2-picrust2_output/ec_metagenome.qzv

qiime feature-table summarize \
--i-table q2-picrust2_output/ko_metagenome.qza \
--o-visualization q2-picrust2_output/ko_metagenome.qzv

qiime feature-table summarize \
--i-table q2-picrust2_output/pathway_abundance.qza \
--o-visualization q2-picrust2_output/pathway_abundance.qzv

iv. To rarefy or not rarefy before/after PICRUSt2? Yes, you have to for Beta diversity analysis. See the very brilliant response here: https://forum.qiime2.org/t/when-to-rarefy-in-picrust2/8107	
      
      
v. Get the rarefied dataset Ð Sampling depth chosen (based on the data visualized above): 17265035 (DRM5) Ð Cut-off for KO pathways

qiime diversity core-metrics \
--i-table q2-picrust2_output/ko_metagenome.qza \
--p-sampling-depth 17265035 \
--m-metadata-file metadata_daynight_noD2.txt \
--output-dir ko_core_metrics_out \
--p-n-jobs 10


vi. Get the rarefied dataset Ð Sampling depth chosen (based on the data visualized above): 2394389 (DRM5) Ð Cut-off for MetaCYC pathways

qiime diversity core-metrics \
--i-table q2-picrust2_output/pathway_abundance.qza \
--p-sampling-depth 2394389 \
--m-metadata-file metadata_daynight_noD2.txt \
--output-dir pathabun_core_metrics_out \
--p-n-jobs 10

vii. Export the relevant file following this section: ÒExport and convert the relevant file (i.e., count table and taxonomy file) for R analysisÓ section 

a. ec_metagenome.qza file. Command code:

qiime tools export \
--input-path q2-picrust2_output/ec_metagenome.qza \
--output-path ec_meta *This is a folder

biom convert \
-i ec_meta/feature-table.biom \
-o ec_meta/ec_raw_feature_table.tsv \
--to-tsv

*Ò.tsvÓ file is still problematic when upload into R. So, convert it to excel format and save in Ò.txtÓ format. (Remember to remove the 1st row comment: Ò# Constructed from biom fileÓ; also makes sure the hastag # is removed from OTU ID as well)


b. ko_metagenome.qza file. Command code:

qiime tools export \
--input-path q2-picrust2_output/ko_metagenome.qza \
--output-path ko_meta *This is a folder

biom convert \
-i ko_meta/feature-table.biom \
-o ko_meta/ko_raw_feature_table.tsv \
--to-tsv


c. Pathway_abundance.qza file. Command code:

qiime tools export \
--input-path q2-picrust2_output/pathway_abundance.qza \
--output-path pathabun *This is a folder

biom convert \
-i pathabun/feature-table.biom \
-o pathabun/metacyc_raw_feature_table.tsv \
--to-tsv


Rarefied table

d. KO file. Command code:

qiime tools export \
--input-path ko_core_metrics_out/rarefied_table.qza \
--output-path ko_rarefied_table  *This is a folder

biom convert \
-i ko_rarefied_table/feature-table.biom \
-o ko_rarefied_table/ko_rarefied_table_17265035.tsv \
--to-tsv


e. MetaCyc file. Command code:

qiime tools export \
--input-path pathabun_core_metrics_out/rarefied_table.qza \
--output-path metacyc_rarefied_table  *This is a folder

biom convert \
-i metacyc_rarefied_table/feature-table.biom \
-o metacyc_rarefied_table/metacyc_rarefied_table_2394389.tsv \
--to-tsv

